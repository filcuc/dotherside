name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  linux-ubuntu-2004:
    runs-on: ubuntu-20.04
    
    steps:
    - uses: actions/checkout@v2

    - name: Install
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential cmake qt5-default qtbase5-dev qtbase5-private-dev qtdeclarative5-dev qtquickcontrols2-5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 xvfb lcov 

    - name: Compile
      run: |
        mkdir build
        cd build
        cmake -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
        cmake --build .

    - name: Test
      run: |
        export QT_DEBUG_PLUGINS=1
        xvfb-run -a ./build/test/TestDynamicQObject

    - name: Cleanup xvfb pidx
      uses: bcomnes/cleanup-xvfb@v1

    - name: Coverage
      run: |
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info "/usr/*" -o coverage.info
        lcov --remove coverage.info "*/build/*" -o coverage.info
        lcov --remove coverage.info "*/test/*" -o coverage.info
        bash <(curl -s https://codecov.io/bash)

  linux-ubuntu-2204:
    runs-on: ubuntu-22.04
    
    steps:
    - uses: actions/checkout@v2

    - name: Install
      run: |
        sudo apt-get update -y
        sudo apt-get install -y build-essential cmake qtbase5-dev qtbase5-private-dev qtdeclarative5-dev qtquickcontrols2-5-dev qml-module-qtquick2 qml-module-qtquick-controls2 qml-module-qtquick-window2 xvfb lcov 

    - name: Compile
      run: |
        mkdir build
        cd build
        cmake -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
        cmake --build .

    - name: Test
      run: |
        export QT_DEBUG_PLUGINS=1
        xvfb-run -a ./build/test/TestDynamicQObject

    - name: Cleanup xvfb pidx
      uses: bcomnes/cleanup-xvfb@v1
      
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        include:
        - qt: 5.15.2
          config: Release
    steps:
    - uses: actions/checkout@v2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.qt }}-QtCache
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ matrix.qt }}
        
    - name: Install cmake
      run: brew install cmake
    
    - name: Compile
      run: |
        mkdir build
        cd build
        cmake -DENABLE_COVERAGE=ON -DCMAKE_BUILD_TYPE=Debug ..
        cmake --build .

    - name: Test
      run: |
        export QT_DEBUG_PLUGINS=1
        ./build/test/TestDynamicQObject

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
        - qt: 5.12.12
          arch: win64_msvc2017_64
          config: Release
          toolset: v141
          qtdirenvname: Qt5_DIR
        - qt: 5.15.2
          arch: win64_msvc2019_64
          config: Release
          toolset: v142
          qtdirenvname: Qt5_DIR
        # Testing on Qt6 is disabled until https://bugreports.qt.io/browse/QTBUG-103611 is resolved
        #- qt: 6.2.4
        #  arch: win64_msvc2019_64
        #  config: Debug
        #  toolset: v142
        #  qtdirenvname: Qt6_DIR
    env:
      PACKAGE_NAME: libDOtherSide-windows-${{ matrix.arch }}-qt-${{ matrix.qt }}.zip

    steps:
    - uses: actions/checkout@v2

    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.qt }}-QtCache

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        arch: ${{ matrix.arch }}
        version: ${{ matrix.qt }}

    - name: Compile
      shell: cmd
      run: |
        mkdir build
        cd build
        cmake -T"${{ matrix.toolset }}" -A x64 -DCMAKE_BUILD_TYPE=${{ matrix.config }} ..
        cmake --build . --config ${{ matrix.config }}

    - name: Test
      shell: cmd
      run: |
        set QT_PLUGIN_PATH=%${{ matrix.qtdirenvname }}%/plugins
        set QML2_IMPORT_PATH=%${{ matrix.qtdirenvname }}%/qml
        "build\test\${{ matrix.config }}\TestDynamicQObject.exe"

    - name: Upload readme
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: README.md

    - name: Upload change log
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: CHANGELOG.md

    - name: Upload license
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: LICENSE

    - name: Upload library binary
      uses: actions/upload-artifact@master
      with:
        name: ${{ env.PACKAGE_NAME }}
        path: build/lib/${{ matrix.config }}/DOtherSide.dll

      
        
    
    
